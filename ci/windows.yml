steps:
  - checkout: self
    submodules: true

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'

  - task: PythonScript@0
    inputs:
      scriptSource: 'filePath'
      scriptPath: $(Build.SourcesDirectory)/ci/ogrewininstaller.py
      workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Install Ogre'

  - script: |
      cd $(Build.SourcesDirectory)
      python -m pip install aqtinstall
    displayName: 'Install aqtinstall'

  - script: |
      cd $(Build.SourcesDirectory)
      python -m aqt install --outputdir $(Build.BinariesDirectory)\\Qt $(QtVersion) windows desktop $(QtWinArch) -m qtcore qtgui qtxml qtwidgets
    displayName: 'Install Qt $(QtVersion)'

  - task: CMake@1
    inputs:
      workingDirectory: $(Build.BinariesDirectory)
      cmakeArgs: $(Build.SourcesDirectory) -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_PREFIX_PATH=$(Build.BinariesDirectory)/Qt/$(QtVersion)/msvc2017_64 -DSPC_VERSION_BUILD=$(Build.SourceVersion)
    displayName: 'Configure'

  - task: CMake@1
    inputs:
      workingDirectory: $(Build.BinariesDirectory)
      cmakeArgs: --build $(Build.BinariesDirectory) --config MinSizeRel
    displayName: 'Build'

  - task: CMake@1
    inputs:
      workingDirectory: $(Build.BinariesDirectory)
      cmakeArgs: --install $(Build.BinariesDirectory) --prefix $(Build.ArtifactStagingDirectory) --config MinSizeRel
    displayName: 'Install'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: Windows_build
