steps:
  - checkout: self
    submodules: true

  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: OgreWindows
      path: $(Agent.TempDirectory)
    displayName: 'Checkout Ogre'

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: $(Agent.TempDirectory)/Ogre.tar.gz
      destinationFolder: $(Build.SourcesDirectory)/libs
      cleanDestinationFolder: false
    displayName: 'Extract Ogre'

  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: QtWindows
      path: $(Agent.TempDirectory)
    displayName: 'Checkout Qt'

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: $(Agent.TempDirectory)/Qt.tar.gz
      destinationFolder: $(Build.SourcesDirectory)/libs
      cleanDestinationFolder: false
    displayName: 'Extract Qt'

  - task: CMake@1
    inputs:
      workingDirectory: $(Build.BinariesDirectory)
      cmakeArgs: $(Build.SourcesDirectory) -DSPACESCAPE_USE_CONAN=OFF -DCMAKE_BUILD_TYPE=MinSizeRel -DSPC_VERSION_BUILD=$(Build.SourceVersion)
    displayName: 'Configure'

  - task: CMake@1
    inputs:
      workingDirectory: $(Build.BinariesDirectory)
      cmakeArgs: --build $(Build.BinariesDirectory) --config MinSizeRel
    displayName: 'Build'

  - task: CMake@1
    inputs:
      workingDirectory: $(Build.BinariesDirectory)
      cmakeArgs: --install $(Build.BinariesDirectory) --prefix $(Build.ArtifactStagingDirectory) --config MinSizeRel
    displayName: 'Install'

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: Windows_build
